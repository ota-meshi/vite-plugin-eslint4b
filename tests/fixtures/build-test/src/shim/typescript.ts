/* eslint @typescript-eslint/naming-convention: 0 -- Shim for test */
export const versionMajorMinor = "5.0";
export enum TypeFlags {
  Any = 1,
  Unknown = 2,
  String = 4,
  Number = 8,
  Boolean = 16,
  Enum = 32,
  BigInt = 64,
  StringLiteral = 128,
  NumberLiteral = 256,
  BooleanLiteral = 512,
  EnumLiteral = 1024,
  BigIntLiteral = 2048,
  ESSymbol = 4096,
  UniqueESSymbol = 8192,
  Void = 16384,
  Undefined = 32768,
  Null = 65536,
  Never = 131072,
  TypeParameter = 262144,
  Object = 524288,
  Union = 1048576,
  Intersection = 2097152,
  Index = 4194304,
  IndexedAccess = 8388608,
  Conditional = 16777216,
  Substitution = 33554432,
  NonPrimitive = 67108864,
  TemplateLiteral = 134217728,
  StringMapping = 268435456,
  Literal = 2944,
  Unit = 109472,
  Freshable = 2976,
  StringOrNumberLiteral = 384,
  PossiblyFalsy = 117724,
  StringLike = 402653316,
  NumberLike = 296,
  BigIntLike = 2112,
  BooleanLike = 528,
  EnumLike = 1056,
  ESSymbolLike = 12288,
  VoidLike = 49152,
  UnionOrIntersection = 3145728,
  StructuredType = 3670016,
  TypeVariable = 8650752,
  InstantiableNonPrimitive = 58982400,
  InstantiablePrimitive = 406847488,
  Instantiable = 465829888,
  StructuredOrInstantiable = 469499904,
  Narrowable = 536624127,
}
export enum SyntaxKind {
  Unknown = 0,
  EndOfFileToken = 1,
  SingleLineCommentTrivia = 2,
  MultiLineCommentTrivia = 3,
  NewLineTrivia = 4,
  WhitespaceTrivia = 5,
  ShebangTrivia = 6,
  ConflictMarkerTrivia = 7,
  NumericLiteral = 8,
  BigIntLiteral = 9,
  StringLiteral = 10,
  JsxText = 11,
  JsxTextAllWhiteSpaces = 12,
  RegularExpressionLiteral = 13,
  NoSubstitutionTemplateLiteral = 14,
  TemplateHead = 15,
  TemplateMiddle = 16,
  TemplateTail = 17,
  OpenBraceToken = 18,
  CloseBraceToken = 19,
  OpenParenToken = 20,
  CloseParenToken = 21,
  OpenBracketToken = 22,
  CloseBracketToken = 23,
  DotToken = 24,
  DotDotDotToken = 25,
  SemicolonToken = 26,
  CommaToken = 27,
  QuestionDotToken = 28,
  LessThanToken = 29,
  LessThanSlashToken = 30,
  GreaterThanToken = 31,
  LessThanEqualsToken = 32,
  GreaterThanEqualsToken = 33,
  EqualsEqualsToken = 34,
  ExclamationEqualsToken = 35,
  EqualsEqualsEqualsToken = 36,
  ExclamationEqualsEqualsToken = 37,
  EqualsGreaterThanToken = 38,
  PlusToken = 39,
  MinusToken = 40,
  AsteriskToken = 41,
  AsteriskAsteriskToken = 42,
  SlashToken = 43,
  PercentToken = 44,
  PlusPlusToken = 45,
  MinusMinusToken = 46,
  LessThanLessThanToken = 47,
  GreaterThanGreaterThanToken = 48,
  GreaterThanGreaterThanGreaterThanToken = 49,
  AmpersandToken = 50,
  BarToken = 51,
  CaretToken = 52,
  ExclamationToken = 53,
  TildeToken = 54,
  AmpersandAmpersandToken = 55,
  BarBarToken = 56,
  QuestionToken = 57,
  ColonToken = 58,
  AtToken = 59,
  QuestionQuestionToken = 60,
  /** Only the JSDoc scanner produces BacktickToken. The normal scanner produces NoSubstitutionTemplateLiteral and related kinds. */
  BacktickToken = 61,
  /** Only the JSDoc scanner produces HashToken. The normal scanner produces PrivateIdentifier. */
  HashToken = 62,
  EqualsToken = 63,
  PlusEqualsToken = 64,
  MinusEqualsToken = 65,
  AsteriskEqualsToken = 66,
  AsteriskAsteriskEqualsToken = 67,
  SlashEqualsToken = 68,
  PercentEqualsToken = 69,
  LessThanLessThanEqualsToken = 70,
  GreaterThanGreaterThanEqualsToken = 71,
  GreaterThanGreaterThanGreaterThanEqualsToken = 72,
  AmpersandEqualsToken = 73,
  BarEqualsToken = 74,
  BarBarEqualsToken = 75,
  AmpersandAmpersandEqualsToken = 76,
  QuestionQuestionEqualsToken = 77,
  CaretEqualsToken = 78,
  Identifier = 79,
  PrivateIdentifier = 80,
  BreakKeyword = 81,
  CaseKeyword = 82,
  CatchKeyword = 83,
  ClassKeyword = 84,
  ConstKeyword = 85,
  ContinueKeyword = 86,
  DebuggerKeyword = 87,
  DefaultKeyword = 88,
  DeleteKeyword = 89,
  DoKeyword = 90,
  ElseKeyword = 91,
  EnumKeyword = 92,
  ExportKeyword = 93,
  ExtendsKeyword = 94,
  FalseKeyword = 95,
  FinallyKeyword = 96,
  ForKeyword = 97,
  FunctionKeyword = 98,
  IfKeyword = 99,
  ImportKeyword = 100,
  InKeyword = 101,
  InstanceOfKeyword = 102,
  NewKeyword = 103,
  NullKeyword = 104,
  ReturnKeyword = 105,
  SuperKeyword = 106,
  SwitchKeyword = 107,
  ThisKeyword = 108,
  ThrowKeyword = 109,
  TrueKeyword = 110,
  TryKeyword = 111,
  TypeOfKeyword = 112,
  VarKeyword = 113,
  VoidKeyword = 114,
  WhileKeyword = 115,
  WithKeyword = 116,
  ImplementsKeyword = 117,
  InterfaceKeyword = 118,
  LetKeyword = 119,
  PackageKeyword = 120,
  PrivateKeyword = 121,
  ProtectedKeyword = 122,
  PublicKeyword = 123,
  StaticKeyword = 124,
  YieldKeyword = 125,
  AbstractKeyword = 126,
  AccessorKeyword = 127,
  AsKeyword = 128,
  AssertsKeyword = 129,
  AssertKeyword = 130,
  AnyKeyword = 131,
  AsyncKeyword = 132,
  AwaitKeyword = 133,
  BooleanKeyword = 134,
  ConstructorKeyword = 135,
  DeclareKeyword = 136,
  GetKeyword = 137,
  InferKeyword = 138,
  IntrinsicKeyword = 139,
  IsKeyword = 140,
  KeyOfKeyword = 141,
  ModuleKeyword = 142,
  NamespaceKeyword = 143,
  NeverKeyword = 144,
  OutKeyword = 145,
  ReadonlyKeyword = 146,
  RequireKeyword = 147,
  NumberKeyword = 148,
  ObjectKeyword = 149,
  SatisfiesKeyword = 150,
  SetKeyword = 151,
  StringKeyword = 152,
  SymbolKeyword = 153,
  TypeKeyword = 154,
  UndefinedKeyword = 155,
  UniqueKeyword = 156,
  UnknownKeyword = 157,
  FromKeyword = 158,
  GlobalKeyword = 159,
  BigIntKeyword = 160,
  OverrideKeyword = 161,
  OfKeyword = 162,
  QualifiedName = 163,
  ComputedPropertyName = 164,
  TypeParameter = 165,
  Parameter = 166,
  Decorator = 167,
  PropertySignature = 168,
  PropertyDeclaration = 169,
  MethodSignature = 170,
  MethodDeclaration = 171,
  ClassStaticBlockDeclaration = 172,
  Constructor = 173,
  GetAccessor = 174,
  SetAccessor = 175,
  CallSignature = 176,
  ConstructSignature = 177,
  IndexSignature = 178,
  TypePredicate = 179,
  TypeReference = 180,
  FunctionType = 181,
  ConstructorType = 182,
  TypeQuery = 183,
  TypeLiteral = 184,
  ArrayType = 185,
  TupleType = 186,
  OptionalType = 187,
  RestType = 188,
  UnionType = 189,
  IntersectionType = 190,
  ConditionalType = 191,
  InferType = 192,
  ParenthesizedType = 193,
  ThisType = 194,
  TypeOperator = 195,
  IndexedAccessType = 196,
  MappedType = 197,
  LiteralType = 198,
  NamedTupleMember = 199,
  TemplateLiteralType = 200,
  TemplateLiteralTypeSpan = 201,
  ImportType = 202,
  ObjectBindingPattern = 203,
  ArrayBindingPattern = 204,
  BindingElement = 205,
  ArrayLiteralExpression = 206,
  ObjectLiteralExpression = 207,
  PropertyAccessExpression = 208,
  ElementAccessExpression = 209,
  CallExpression = 210,
  NewExpression = 211,
  TaggedTemplateExpression = 212,
  TypeAssertionExpression = 213,
  ParenthesizedExpression = 214,
  FunctionExpression = 215,
  ArrowFunction = 216,
  DeleteExpression = 217,
  TypeOfExpression = 218,
  VoidExpression = 219,
  AwaitExpression = 220,
  PrefixUnaryExpression = 221,
  PostfixUnaryExpression = 222,
  BinaryExpression = 223,
  ConditionalExpression = 224,
  TemplateExpression = 225,
  YieldExpression = 226,
  SpreadElement = 227,
  ClassExpression = 228,
  OmittedExpression = 229,
  ExpressionWithTypeArguments = 230,
  AsExpression = 231,
  NonNullExpression = 232,
  MetaProperty = 233,
  SyntheticExpression = 234,
  SatisfiesExpression = 235,
  TemplateSpan = 236,
  SemicolonClassElement = 237,
  Block = 238,
  EmptyStatement = 239,
  VariableStatement = 240,
  ExpressionStatement = 241,
  IfStatement = 242,
  DoStatement = 243,
  WhileStatement = 244,
  ForStatement = 245,
  ForInStatement = 246,
  ForOfStatement = 247,
  ContinueStatement = 248,
  BreakStatement = 249,
  ReturnStatement = 250,
  WithStatement = 251,
  SwitchStatement = 252,
  LabeledStatement = 253,
  ThrowStatement = 254,
  TryStatement = 255,
  DebuggerStatement = 256,
  VariableDeclaration = 257,
  VariableDeclarationList = 258,
  FunctionDeclaration = 259,
  ClassDeclaration = 260,
  InterfaceDeclaration = 261,
  TypeAliasDeclaration = 262,
  EnumDeclaration = 263,
  ModuleDeclaration = 264,
  ModuleBlock = 265,
  CaseBlock = 266,
  NamespaceExportDeclaration = 267,
  ImportEqualsDeclaration = 268,
  ImportDeclaration = 269,
  ImportClause = 270,
  NamespaceImport = 271,
  NamedImports = 272,
  ImportSpecifier = 273,
  ExportAssignment = 274,
  ExportDeclaration = 275,
  NamedExports = 276,
  NamespaceExport = 277,
  ExportSpecifier = 278,
  MissingDeclaration = 279,
  ExternalModuleReference = 280,
  JsxElement = 281,
  JsxSelfClosingElement = 282,
  JsxOpeningElement = 283,
  JsxClosingElement = 284,
  JsxFragment = 285,
  JsxOpeningFragment = 286,
  JsxClosingFragment = 287,
  JsxAttribute = 288,
  JsxAttributes = 289,
  JsxSpreadAttribute = 290,
  JsxExpression = 291,
  CaseClause = 292,
  DefaultClause = 293,
  HeritageClause = 294,
  CatchClause = 295,
  AssertClause = 296,
  AssertEntry = 297,
  ImportTypeAssertionContainer = 298,
  PropertyAssignment = 299,
  ShorthandPropertyAssignment = 300,
  SpreadAssignment = 301,
  EnumMember = 302,
  /** @deprecated */ UnparsedPrologue = 303,
  /** @deprecated */ UnparsedPrepend = 304,
  /** @deprecated */ UnparsedText = 305,
  /** @deprecated */ UnparsedInternalText = 306,
  /** @deprecated */ UnparsedSyntheticReference = 307,
  SourceFile = 308,
  Bundle = 309,
  /** @deprecated */ UnparsedSource = 310,
  /** @deprecated */ InputFiles = 311,
  JSDocTypeExpression = 312,
  JSDocNameReference = 313,
  JSDocMemberName = 314,
  JSDocAllType = 315,
  JSDocUnknownType = 316,
  JSDocNullableType = 317,
  JSDocNonNullableType = 318,
  JSDocOptionalType = 319,
  JSDocFunctionType = 320,
  JSDocVariadicType = 321,
  JSDocNamepathType = 322,
  JSDoc = 323,
  /** @deprecated Use SyntaxKind.JSDoc */
  JSDocComment = 323,
  JSDocText = 324,
  JSDocTypeLiteral = 325,
  JSDocSignature = 326,
  JSDocLink = 327,
  JSDocLinkCode = 328,
  JSDocLinkPlain = 329,
  JSDocTag = 330,
  JSDocAugmentsTag = 331,
  JSDocImplementsTag = 332,
  JSDocAuthorTag = 333,
  JSDocDeprecatedTag = 334,
  JSDocClassTag = 335,
  JSDocPublicTag = 336,
  JSDocPrivateTag = 337,
  JSDocProtectedTag = 338,
  JSDocReadonlyTag = 339,
  JSDocOverrideTag = 340,
  JSDocCallbackTag = 341,
  JSDocOverloadTag = 342,
  JSDocEnumTag = 343,
  JSDocParameterTag = 344,
  JSDocReturnTag = 345,
  JSDocThisTag = 346,
  JSDocTypeTag = 347,
  JSDocTemplateTag = 348,
  JSDocTypedefTag = 349,
  JSDocSeeTag = 350,
  JSDocPropertyTag = 351,
  JSDocThrowsTag = 352,
  JSDocSatisfiesTag = 353,
  SyntaxList = 354,
  NotEmittedStatement = 355,
  PartiallyEmittedExpression = 356,
  CommaListExpression = 357,
  MergeDeclarationMarker = 358,
  EndOfDeclarationMarker = 359,
  SyntheticReferenceExpression = 360,
  Count = 361,
  FirstAssignment = 63,
  LastAssignment = 78,
  FirstCompoundAssignment = 64,
  LastCompoundAssignment = 78,
  FirstReservedWord = 81,
  LastReservedWord = 116,
  FirstKeyword = 81,
  LastKeyword = 162,
  FirstFutureReservedWord = 117,
  LastFutureReservedWord = 125,
  FirstTypeNode = 179,
  LastTypeNode = 202,
  FirstPunctuation = 18,
  LastPunctuation = 78,
  FirstToken = 0,
  LastToken = 162,
  FirstTriviaToken = 2,
  LastTriviaToken = 7,
  FirstLiteralToken = 8,
  LastLiteralToken = 14,
  FirstTemplateToken = 14,
  LastTemplateToken = 17,
  FirstBinaryOperator = 29,
  LastBinaryOperator = 78,
  FirstStatement = 240,
  LastStatement = 256,
  FirstNode = 163,
  FirstJSDocNode = 312,
  LastJSDocNode = 353,
  FirstJSDocTagNode = 330,
  LastJSDocTagNode = 353,
}
export enum Extension {
  Ts = ".ts",
  Tsx = ".tsx",
  Dts = ".d.ts",
  Js = ".js",
  Jsx = ".jsx",
  Json = ".json",
  TsBuildInfo = ".tsbuildinfo",
  Mjs = ".mjs",
  Mts = ".mts",
  Dmts = ".d.mts",
  Cjs = ".cjs",
  Cts = ".cts",
  Dcts = ".d.cts",
}
